package 模拟面试1

/**
有台奇怪的打印机有以下两个特殊要求：

打印机每次只能打印由 同一个字符 组成的序列。
每次可以在任意起始和结束位置打印新字符，并且会覆盖掉原来已有的字符。
给你一个字符串 s ，你的任务是计算这个打印机打印它需要的最少打印次数。


示例 1：

输入：s = "aaabbb"
输出：2
解释：首先打印 "aaa" 然后打印 "bbb"。
示例 2：

输入：s = "aba"
输出：2
解释：首先打印 "aaa" 然后在第二个位置打印 "b" 覆盖掉原来的字符 'a'。


提示：

1 <= s.length <= 100
s 由小写英文字母组成
*/

//最少打印次数 肯定是要有连续的
func strangePrinter(s string) int {
	if len(s) == 1 {
		return 1
	}
	if len(s) == 2 {
		if s[0] == s[1] {
			return 1
		}
		return 2
	}
	//打印3个 就是先打印2个

}
